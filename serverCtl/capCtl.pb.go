// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.11.2
// source: capCtl.proto

package serverCtl

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Comm int32

const (
	// 错误的Cmd命令
	Comm_Error_Cmd Comm = 0
	// 服务器分组不存在
	Comm_GroupSeason_SeasonNotExists Comm = 1
)

// Enum value maps for Comm.
var (
	Comm_name = map[int32]string{
		0: "Error_Cmd",
		1: "GroupSeason_SeasonNotExists",
	}
	Comm_value = map[string]int32{
		"Error_Cmd":                   0,
		"GroupSeason_SeasonNotExists": 1,
	}
)

func (x Comm) Enum() *Comm {
	p := new(Comm)
	*p = x
	return p
}

func (x Comm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Comm) Descriptor() protoreflect.EnumDescriptor {
	return file_capCtl_proto_enumTypes[0].Descriptor()
}

func (Comm) Type() protoreflect.EnumType {
	return &file_capCtl_proto_enumTypes[0]
}

func (x Comm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Comm.Descriptor instead.
func (Comm) EnumDescriptor() ([]byte, []int) {
	return file_capCtl_proto_rawDescGZIP(), []int{0}
}

type ImageRect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int64 `protobuf:"varint,1,opt,name=X,proto3" json:"X,omitempty"`
	Y int64 `protobuf:"varint,2,opt,name=Y,proto3" json:"Y,omitempty"`
	W int64 `protobuf:"varint,3,opt,name=W,proto3" json:"W,omitempty"`
	H int64 `protobuf:"varint,4,opt,name=H,proto3" json:"H,omitempty"`
}

func (x *ImageRect) Reset() {
	*x = ImageRect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_capCtl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageRect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageRect) ProtoMessage() {}

func (x *ImageRect) ProtoReflect() protoreflect.Message {
	mi := &file_capCtl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageRect.ProtoReflect.Descriptor instead.
func (*ImageRect) Descriptor() ([]byte, []int) {
	return file_capCtl_proto_rawDescGZIP(), []int{0}
}

func (x *ImageRect) GetX() int64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ImageRect) GetY() int64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *ImageRect) GetW() int64 {
	if x != nil {
		return x.W
	}
	return 0
}

func (x *ImageRect) GetH() int64 {
	if x != nil {
		return x.H
	}
	return 0
}

type CapRectRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  Comm   `protobuf:"varint,1,opt,name=Status,proto3,enum=serverCtl.Comm" json:"Status,omitempty"`
	CapFile string `protobuf:"bytes,2,opt,name=CapFile,proto3" json:"CapFile,omitempty"`
}

func (x *CapRectRes) Reset() {
	*x = CapRectRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_capCtl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapRectRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapRectRes) ProtoMessage() {}

func (x *CapRectRes) ProtoReflect() protoreflect.Message {
	mi := &file_capCtl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapRectRes.ProtoReflect.Descriptor instead.
func (*CapRectRes) Descriptor() ([]byte, []int) {
	return file_capCtl_proto_rawDescGZIP(), []int{1}
}

func (x *CapRectRes) GetStatus() Comm {
	if x != nil {
		return x.Status
	}
	return Comm_Error_Cmd
}

func (x *CapRectRes) GetCapFile() string {
	if x != nil {
		return x.CapFile
	}
	return ""
}

var File_capCtl_proto protoreflect.FileDescriptor

var file_capCtl_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x61, 0x70, 0x43, 0x74, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x74, 0x6c, 0x22, 0x43, 0x0a, 0x09, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x63, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x58, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x01, 0x58, 0x12, 0x0c, 0x0a, 0x01, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x01, 0x59, 0x12, 0x0c, 0x0a, 0x01, 0x57, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x57,
	0x12, 0x0c, 0x0a, 0x01, 0x48, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x48, 0x22, 0x4f,
	0x0a, 0x0a, 0x43, 0x61, 0x70, 0x52, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x74, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x46, 0x69, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x61, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x2a,
	0x36, 0x0a, 0x04, 0x43, 0x6f, 0x6d, 0x6d, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x43, 0x6d, 0x64, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0x01, 0x32, 0x48, 0x0a, 0x0c, 0x43, 0x61, 0x70, 0x43, 0x74,
	0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x52, 0x65,
	0x63, 0x74, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x74, 0x6c, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x43, 0x74, 0x6c, 0x2e, 0x43, 0x61, 0x70, 0x52, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x22,
	0x00, 0x42, 0x20, 0x5a, 0x1e, 0x73, 0x65, 0x76, 0x65, 0x6e, 0x6e, 0x69, 0x6e, 0x65, 0x2e, 0x63,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x43, 0x74, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_capCtl_proto_rawDescOnce sync.Once
	file_capCtl_proto_rawDescData = file_capCtl_proto_rawDesc
)

func file_capCtl_proto_rawDescGZIP() []byte {
	file_capCtl_proto_rawDescOnce.Do(func() {
		file_capCtl_proto_rawDescData = protoimpl.X.CompressGZIP(file_capCtl_proto_rawDescData)
	})
	return file_capCtl_proto_rawDescData
}

var file_capCtl_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_capCtl_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_capCtl_proto_goTypes = []interface{}{
	(Comm)(0),          // 0: serverCtl.Comm
	(*ImageRect)(nil),  // 1: serverCtl.ImageRect
	(*CapRectRes)(nil), // 2: serverCtl.CapRectRes
}
var file_capCtl_proto_depIdxs = []int32{
	0, // 0: serverCtl.CapRectRes.Status:type_name -> serverCtl.Comm
	1, // 1: serverCtl.CapCtlServer.CapRect:input_type -> serverCtl.ImageRect
	2, // 2: serverCtl.CapCtlServer.CapRect:output_type -> serverCtl.CapRectRes
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_capCtl_proto_init() }
func file_capCtl_proto_init() {
	if File_capCtl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_capCtl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageRect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_capCtl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapRectRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_capCtl_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_capCtl_proto_goTypes,
		DependencyIndexes: file_capCtl_proto_depIdxs,
		EnumInfos:         file_capCtl_proto_enumTypes,
		MessageInfos:      file_capCtl_proto_msgTypes,
	}.Build()
	File_capCtl_proto = out.File
	file_capCtl_proto_rawDesc = nil
	file_capCtl_proto_goTypes = nil
	file_capCtl_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CapCtlServerClient is the client API for CapCtlServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CapCtlServerClient interface {
	CapRect(ctx context.Context, in *ImageRect, opts ...grpc.CallOption) (*CapRectRes, error)
}

type capCtlServerClient struct {
	cc grpc.ClientConnInterface
}

func NewCapCtlServerClient(cc grpc.ClientConnInterface) CapCtlServerClient {
	return &capCtlServerClient{cc}
}

func (c *capCtlServerClient) CapRect(ctx context.Context, in *ImageRect, opts ...grpc.CallOption) (*CapRectRes, error) {
	out := new(CapRectRes)
	err := c.cc.Invoke(ctx, "/serverCtl.CapCtlServer/CapRect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CapCtlServerServer is the server API for CapCtlServer service.
type CapCtlServerServer interface {
	CapRect(context.Context, *ImageRect) (*CapRectRes, error)
}

// UnimplementedCapCtlServerServer can be embedded to have forward compatible implementations.
type UnimplementedCapCtlServerServer struct {
}

func (*UnimplementedCapCtlServerServer) CapRect(context.Context, *ImageRect) (*CapRectRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CapRect not implemented")
}

func RegisterCapCtlServerServer(s *grpc.Server, srv CapCtlServerServer) {
	s.RegisterService(&_CapCtlServer_serviceDesc, srv)
}

func _CapCtlServer_CapRect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageRect)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CapCtlServerServer).CapRect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/serverCtl.CapCtlServer/CapRect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CapCtlServerServer).CapRect(ctx, req.(*ImageRect))
	}
	return interceptor(ctx, in, info, handler)
}

var _CapCtlServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "serverCtl.CapCtlServer",
	HandlerType: (*CapCtlServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CapRect",
			Handler:    _CapCtlServer_CapRect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "capCtl.proto",
}
